% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_distance_matrix.R
\name{compute_distance_matrix}
\alias{compute_distance_matrix}
\title{Compute a Distance Matrix and Generate a Heatmap}
\usage{
compute_distance_matrix(
  count_matrix,
  use_correlation = FALSE,
  method = "euclidean",
  correlation_method = "spearman",
  plot_heatmap = TRUE,
  cluster_rows = TRUE,
  cluster_cols = TRUE,
  clustering_method = "complete",
  display_numbers = FALSE,
  number_color = "black",
  color_palette = c("#05287A", "#DCEEF0"),
  breaks = 50,
  main_title = NULL
)
}
\arguments{
\item{count_matrix}{A data frame or matrix where rows are samples and columns are genes. Row names should be sample names.}

\item{use_correlation}{Logical. If \code{TRUE}, the distance matrix is computed using correlation. If \code{FALSE}, a distance-based method is used. Default is \code{FALSE}.}

\item{method}{Character. The distance method to use when \code{use_correlation = FALSE}. Options are \code{"euclidean"}, \code{"manhattan"}, \code{"canberra"}, or \code{"minkowski"}. Default is \code{"euclidean"}.}

\item{correlation_method}{Character. The correlation method to use when \code{use_correlation = TRUE}. Options are \code{"spearman"}, \code{"pearson"}, or \code{"kendall"}. Default is \code{"spearman"}.}

\item{plot_heatmap}{Logical. If \code{TRUE}, a heatmap of the distance matrix is generated. Default is \code{TRUE}.}

\item{cluster_rows}{Logical. If \code{TRUE}, rows of the heatmap are clustered. Default is \code{TRUE}.}

\item{cluster_cols}{Logical. If \code{TRUE}, columns of the heatmap are clustered. Default is \code{TRUE}.}

\item{clustering_method}{Character. The clustering method to use for rows and columns. Options include \code{"complete"}, \code{"average"}, \code{"single"}, \code{"ward.D"}, \code{"ward.D2"}, \code{"mcquitty"}, \code{"median"}, or \code{"centroid"}. Default is \code{"complete"}.}

\item{display_numbers}{Logical. If \code{TRUE}, numeric values are displayed in the heatmap cells. Default is \code{FALSE}.}

\item{number_color}{Character. The color of the numbers displayed in the heatmap cells when \code{display_numbers = TRUE}. Default is \code{"black"}.}

\item{color_palette}{A vector of colors for the heatmap. Default is \code{c("#05287A", "#DCEEF0")}.}

\item{breaks}{Numeric. The number of breaks in the color palette. Default is \code{50}.}

\item{main_title}{Character. The title of the heatmap. If \code{NULL}, a default title is generated. Default is \code{NULL}.}
}
\value{
A distance matrix (as a matrix object) with samples as rows and columns. Row and column names are preserved.
}
\description{
This function computes a distance matrix from a count matrix and optionally generates a heatmap.
The user can choose between distance-based methods (e.g., Euclidean, Manhattan) or correlation-based methods (e.g., Spearman, Pearson).
The heatmap can be customized with clustering, color palettes, and other parameters.
}
\details{
The function performs the following steps:
\enumerate{
\item Checks that the input \code{count_matrix} is a data frame with row names (sample names).
\item Computes the distance matrix:
\itemize{
\item If \code{use_correlation = TRUE}, the correlation matrix is computed between samples (rows) and converted to a distance matrix using \code{1 - correlation}.
\item If \code{use_correlation = FALSE}, the distance matrix is computed using the specified distance method.
}
\item Generates a heatmap of the distance matrix if \code{plot_heatmap = TRUE}.
\item Returns the distance matrix as a matrix object.
}
}
\examples{
# Example count matrix (samples as rows, genes as columns)
count_matrix <- data.frame(
  Gene1 = c(10, 20, 30),
  Gene2 = c(15, 25, 35),
  Gene3 = c(12, 22, 32)
)

# Compute distance matrix using Euclidean distance and plot heatmap
dist_matrix <- compute_distance_matrix(count_matrix, use_correlation = FALSE, method = "euclidean")

# Compute distance matrix using Spearman correlation and plot heatmap
dist_matrix <- compute_distance_matrix(count_matrix, use_correlation = TRUE, correlation_method = "spearman")

# Compute distance matrix without plotting the heatmap
dist_matrix <- compute_distance_matrix(count_matrix, plot_heatmap = FALSE)

# Compute distance matrix and use "average" clustering for the heatmap
dist_matrix <- compute_distance_matrix(count_matrix, clustering_method = "average")

# Compute distance matrix and display numbers in red
dist_matrix <- compute_distance_matrix(count_matrix, display_numbers = TRUE, number_color = "red")

}
