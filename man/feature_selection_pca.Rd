% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_selection_pca.R
\name{feature_selection_pca}
\alias{feature_selection_pca}
\title{Perform Feature Selection Using PCA Results}
\usage{
feature_selection_pca(
  pca_result,
  count_matrix,
  num_pcs = 3,
  num_genes_per_pc = 100,
  select_worst = FALSE,
  use_last_pcs = FALSE
)
}
\arguments{
\item{pca_result}{The result of the \code{prcomp} function (PCA result).}

\item{count_matrix}{A data frame or matrix where rows are samples and columns are genes, or vice versa. Row names should be sample or gene names.}

\item{num_pcs}{Numeric. The number of principal components (PCs) to consider for feature selection. Default is 3.}

\item{num_genes_per_pc}{Numeric. The number of top or worst genes to extract from each selected PC. Default is 100.}

\item{select_worst}{Logical. If \code{TRUE}, select the worst genes (smallest absolute loadings). If \code{FALSE}, select the top genes (largest absolute loadings). Default is \code{FALSE}.}

\item{use_last_pcs}{Logical. If \code{TRUE}, select genes from the last \code{num_pcs} PCs. If \code{FALSE}, select genes from the first \code{num_pcs} PCs. Default is \code{FALSE}.}
}
\value{
A list containing:
\itemize{
\item \code{selected_genes}: A vector of gene names selected based on the PCA results.
\item \code{selected_count_matrix}: A new count matrix containing only the selected genes.
}
}
\description{
This function performs feature selection based on the results of Principal Component Analysis (PCA).
It allows the user to select the number of principal components (PCs) and the number of top or worst genes to extract from each PC.
The function also allows the user to specify whether to select genes from the first PCs or the last PCs.
The function returns a new count matrix containing only the selected genes.
}
\examples{
# Example count matrix (samples as rows, genes as columns)
count_matrix <- data.frame(
  Gene1 = c(10, 20, 30, 40),
  Gene2 = c(15, 25, 35, 45),
  Gene3 = c(12, 22, 32, 42)
)

# Perform PCA
pca_result <- prcomp(count_matrix, center = TRUE, scale = TRUE)

# Perform feature selection (top genes from first PCs)
feature_selection_results <- feature_selection_pca(pca_result, count_matrix, num_pcs = 2, num_genes_per_pc = 1)

# Access selected genes and count matrix
feature_selection_results$selected_genes
feature_selection_results$selected_count_matrix

# Perform feature selection (worst genes from last PCs)
feature_selection_results_worst <- feature_selection_pca(pca_result, count_matrix, num_pcs = 2, num_genes_per_pc = 1, select_worst = TRUE, use_last_pcs = TRUE)

# Access selected genes and count matrix
feature_selection_results_worst$selected_genes
feature_selection_results_worst$selected_count_matrix

}
