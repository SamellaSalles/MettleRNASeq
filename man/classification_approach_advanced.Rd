% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_approach_advanced.R
\name{classification_approach_advanced}
\alias{classification_approach_advanced}
\title{Advanced Classification with Gene Resampling and Replicate Splitting}
\usage{
classification_approach_advanced(
  input_data,
  algorithms,
  hyper_params,
  num_resamples,
  num_genes,
  train_percentage = 0.75,
  metrics = "Accuracy",
  summary_stat = "median",
  replace_genes = TRUE,
  parallel = FALSE,
  seed = 123
)
}
\arguments{
\item{input_data}{A data frame output from \code{prepare_input_matrix()}, with genes as rows,
replicates (e.g., \code{Rep_1}, \code{Rep_2}, ...) as columns, and a \code{Condition} column.}

\item{algorithms}{A character vector of classification algorithms (e.g., \code{"rf"}, \code{"ranger"}, \code{"svmLinear2"}).}

\item{hyper_params}{A named list of tuning grids (data.frames) for each algorithm. Each list element must contain
the hyperparameters specific to the corresponding algorithm. See details below.}

\item{num_resamples}{Number of bootstrap resamples (i.e., how many different sets of genes to sample).}

\item{num_genes}{Number of genes to randomly sample from the first condition in each resample.}

\item{train_percentage}{Percentage of replicates to use for training (e.g., 0.75).}

\item{metrics}{A character vector of evaluation metrics (currently only \code{"Accuracy"} is supported).}

\item{summary_stat}{Statistic to summarize test performance per resample. Either \code{"median"} or \code{"mean"}.}

\item{replace_genes}{Logical; whether to sample genes with replacement.}

\item{parallel}{Logical; whether to allow parallel execution during model training (if supported by the algorithm).}

\item{seed}{Integer; random seed for reproducibility.}
}
\value{
A list with the following components:
\describe{
\item{eval_table}{A data frame with algorithm name, resample number, data split, train/test replicates, and metrics.}
\item{partition_table}{A data frame listing all unique train/test replicate combinations used.}
\item{genes_table}{A data frame where each column is a resample and each row is the position (index) of a gene selected from the first condition.}
\item{models}{A nested list of trained models per algorithm, resample, and data split.}
}
}
\description{
This function performs classification using selected algorithms across multiple resamples of genes,
with all possible train/test replicate partitions. It outputs evaluation metrics, selected genes,
partitioning details, and trained models.
}
\details{
Genes are sampled only from the first condition, then matched across all conditions. For each resample,
the function uses all possible combinations of train/test replicate splits based on the given training percentage.

The \code{hyper_params} argument must be a named list where each name corresponds to an algorithm (e.g., \code{"rf"} or \code{"ranger"}), and each value is a data frame with hyperparameter settings. Example:

\preformatted{
hyper_params <- list(
  rf = data.frame(mtry = c(1, 5, 10, sqrt(length(cols)))), 
  ranger = data.frame(mtry = c(1, 5, 10, sqrt(length(cols))), 
                      splitrule = "extratrees", 
                      min.node.size = c(2, 3))
)
}

Output metrics include training and test accuracy per split and per resample, with summaries per resample.
}
\examples{
\dontrun{
input_data <- prepare_input_matrix(my_counts, sample_vector = sample_names, condition_vector = condition_labels)
hyper_params <- list(
  rf = data.frame(mtry = c(1, 5, 10))
)
results <- classification_approach_advanced(
  input_data = input_data,
  algorithms = c("rf"),
  hyper_params = hyper_params,
  num_resamples = 5,
  num_genes = 50
)
}

}
