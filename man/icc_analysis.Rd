% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icc_analysis.R
\name{icc_analysis}
\alias{icc_analysis}
\title{Intra-Condition Correlation (ICC) Analysis}
\usage{
icc_analysis(
  data,
  condition_split,
  method = "spearman",
  plot = FALSE,
  colors = c("#f57600", "white", "#0073e6"),
  plot_type = c("lower", "upper", "full"),
  show_coef = FALSE,
  tl.cex = 0.7,
  number.cex = 0.7,
  order = c("AOE", "FPC", "hclust", "alphabet")
)
}
\arguments{
\item{data}{A data frame or matrix with samples in rows and genes in columns.}

\item{condition_split}{Numeric vector of length 2 specifying the row indices that separate conditions.}

\item{method}{Correlation method ("pearson", "kendall", or "spearman"). Default is "spearman".}

\item{plot}{Logical indicating whether to generate correlation heatmaps. Default is FALSE.}

\item{colors}{Vector of colors for the heatmap gradient. Default is c("#f57600", "white", "#0073e6").}

\item{plot_type}{Type of heatmap ("full", "upper", or "lower"). Default is "lower".}

\item{show_coef}{Logical indicating whether to show correlation coefficients. Default is FALSE.}

\item{tl.cex}{Text size for gene names. Default is 0.7.}

\item{number.cex}{Text size for correlation coefficients. Default is 0.7.}

\item{order}{Method to order the correlation matrix ("AOE", "FPC", "hclust", "alphabet"). Default is "AOE".}
}
\value{
A list containing proper matrix objects:
\itemize{
\item correlation_matrix_cond1 - Gene x gene correlation matrix for condition 1 (class "matrix")
\item correlation_matrix_cond2 - Gene x gene correlation matrix for condition 2 (class "matrix")
\item plots - (Optional) List of heatmap plots when plot=TRUE
}
}
\description{
Calculates gene-gene correlations within each condition. Returns proper correlation matrices.
Note: Genes must be in columns (variables) and samples in rows (observations).
}
\examples{
\dontrun{
data <- matrix(rnorm(80), nrow=8, ncol=10)  # 8 samples (4+4), 10 genes
colnames(data) <- paste0("Gene_", 1:10)
icc_result <- icc_analysis(data, condition_split = c(4, 8))
class(icc_result$correlation_matrix_cond1)  # "matrix" "array" 
}

}
